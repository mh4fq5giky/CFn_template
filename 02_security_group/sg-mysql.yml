AWSTemplateFormatVersion: 2010-09-09
Description: Create a security group for db access.

# =======================================
# Metadata
# =======================================
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Common Configuration"
        Parameters:
          - PJPrefix
          - Environment
          - VPCID
          - UseWebSG

# =======================================
# Parameters
# =======================================
Parameters:
  PJPrefix:
    Type: String
    Default: testprefix
    MinLength: 1
    MaxLength: 12
    AllowedPattern: "[a-z0-9]+"
    Description: "Project prefix, consisting of lowercase letters and numbers."
    ConstraintDescription: "Must contain only lowercase letters and numbers."

  Environment:
    Type: String
    Default: dev
    AllowedValues: [ dev, stg, prd ]
    Description: "Deployment environment (dev, stg, or prd)."

  ExistingBastionSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Default: ""
    Description: "Specify the Security Group ID for the Bastion host to associate with the EC2 instance. Leave blank to skip."

  ExistingWebSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Default: ""
    Description: "Specify the ID of an existing Security Group to associate with the EC2 instance. If you do not want to associate an existing Security Group, leave this field blank."

# =======================================
# Condition
# =======================================
Conditions:
  IsExistingBastionSGSpecified: !Not [ !Equals [ !Ref ExistingBastionSecurityGroupId, "" ]]
  IsExistingWebSGSpecified: !Not [ !Equals [ !Ref ExistingWebSecurityGroupId, "" ]]

# =======================================
# Resources
# =======================================
Resources:

  # -------------------------------------
  # Security Group
  # -------------------------------------
  SecurityGroupForRDS:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub "${PJPrefix}-${Environment}-db-sg"
      GroupDescription: !Sub "${PJPrefix}-${Environment}-db-sg"
      VpcId: { "Fn::ImportValue": { "Fn::Sub": "${PJPrefix}-${Environment}-vpc" }}
      SecurityGroupIngress:
        - !If
          - IsExistingBastionSGSpecified
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId: !Ref ExistingBastionSecurityGroupId
          - !Ref "AWS::NoValue"
        - !If
          - IsExistingWebSGSpecified
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId: !Ref ExistingWebSecurityGroupId
          - !Split [",", { "Fn::ImportValue": { "Fn::Sub": "${PJPrefix}-${Environment}-private-subnets" }}]
      Tags:
        - Key: Name
          Value: !Sub "${PJPrefix}-${Environment}-db-sg"
        - Key: PJName
          Value: !Ref PJPrefix

# =======================================
# Outputs
# =======================================
Outputs:
  SecurityGroupId:
    Value: !Ref SecurityGroupForRDS
    Export:
      Name: !Sub "${PJPrefix}-${Environment}-db-sg"
